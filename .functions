#!/bin/bash

# This file contains some useful functions

# complete detaching a process from
# a tty
noterm() {
    nohup "$@"  </dev/null &>/dev/null &
    disown %nohup
}

# usefule shortcut for making directory and jumping into it
mkcd() {
    mkdir -p "$1"
    cd "$1"
}

# transforms a sequance of hex represantations of some ascii chars
# to such escaped sequance
seqesc() {
    echo -n $1 | sed -e 's/../\\x&/g' 
}

# useful to convert big endian hex to little endian hex
seqx() {
    seqesc $(printf $1 | fold -w2 | tac | tr -d "\n")
}

# SYNOPSIS
#   manopt command opt
#
# DESCRIPTION
#   Returns the portion of COMMAND's man page describing option OPT.
#   Note: Result is plain text - formatting is lost.
#
#   OPT may be a short option (e.g., -F) or long option (e.g., --fixed-strings);
#   specifying the preceding '-' or '--' is OPTIONAL - UNLESS with long option
#   names preceded only by *1* '-', such as the actions for the `find` command.
#
#   Matching is exact by default; to turn on prefix matching for long options,
#   quote the prefix and append '.*', e.g.: `manopt find '-exec.*'` finds
#   both '-exec' and 'execdir'.
#
# EXAMPLES
#   manopt ls l           # same as: manopt ls -l
#   manopt sort reverse   # same as: manopt sort --reverse
#   manopt find -print    # MUST prefix with '-' here.
#   manopt find '-exec.*' # find options *starting* with '-exec'
manopt() {
  local cmd=$1 opt=$2
  [[ $opt == -* ]] || { (( ${#opt} == 1 )) && opt="-$opt" || opt="--$opt"; }
  man "$cmd" | col -b | awk -v opt="$opt" -v RS= '$0 ~ "(^|,)[[:blank:]]+" opt "([[:punct:][:space:]]|$)"'
}

swap() {
    local TMPFILE=tmp.$$
    mv "$1" $TMPFILE && mv "$2" "$1" && mv $TMPFILE "$2"
}

rms() {
    if [ $# -lt 1 ]; then
	printf "Shred & rm file\nUsage: rms <file>...\n"
    else
	shred -zfn3 "$@" && rm -f "$@"
    fi
}
